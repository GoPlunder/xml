<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>XML-Praktikum SS 2015</title>
        <author>
            <personname>Belinda Zahra</personname>
            <email>belindazahra@yahoo.de</email>
        </author>
        <author>
            <personname>Thea Heim</personname>
            <email>thea.heim@web.de</email>
        </author>
        <author>
            <personname>Youlia Goldberg</personname>
            <email>goldbery@in.tum.de</email>
        </author>
    </info>
    <chapter>
        <title>Einleitung</title>
        <sect1>
            <title>Beschreibung und Motivation von CalendarX</title>
            <para>Text</para>
        </sect1>
        <sect1>
            <title>Ziel und Organisation des XML-Praktikums</title>
            <para>Text</para>
        </sect1>
    </chapter>
    <chapter>
        <title>Das Kalender-System CalendarX</title>
    <sect1>
            <title>Die XRX-Architektur</title>            
         <para><figure><title>CalendarX Layer Structure</title>
                <mediaobject>
                   <imageobject role="fo">
                        <imagedata scalefit="1" width="80%" contentdepth="80%"
                            format="PDF" fileref="Images/Architecture.png"/>
                    </imageobject>
                </mediaobject>
            </figure></para>
       </sect1>   
        <sect1>
            <title>XML Schema: Die Architektur von CalendarX</title>
            <para>Das konzeptuelle Schema für Kalender-Daten</para>
        </sect1>
        <sect1>
            <title>Umsetzung der Tages-, Wochen und Monatssicht</title>
            <sect2>
                <title>SVG zur Erstellung der Templates</title>
                <para>Die Templates der Tages-, Wochen und Monatssicht wurden mit Hilfe von scalable
                    Vector Graphics (SVG) erstellt und mit Hilfe der Tages-, Wochen- und
                    Monatsstylesheets aufgerufen. Im ersten Schritt erhält das Template einen Namen,
                    um es später eindeutig zuordnen zu können. Danach wird die SVG-Fläche mit den
                    einleitenden Höhen- und Breitenangaben definiert. Innerhalb der SVG-Tags wird
                    die entsprechende Graphik gezeichnet.</para>
                <para>Nachfolgend wird beispielhaft das Template "tagessicht" beschrieben. Dieses
                    enthält 25 horizontale Linien, innerhalb zweier Linien steht jeweils die volle
                    Stunde von 0:00 Uhr bis 23:00 Uhr eingrenzen. Zudem enthält das Template eine
                    vertikale Linie, um die Uhrzeiten von den Kalendereinträgen abzugrenzen. <programlisting language="XML"><![CDATA[   <!-- Schreibt jede volle Stunde auf eine horizontale Linie -->
    <xsl:template name="tagessicht">
        <svg width="1300" height="1000" xmlns="http://www.w3.org/2000/svg"
            xmlns:xlink="http://www.w3.org/1999/xlink">
            <!-- Im defs-Container werden die Objekte definiert -->
            <defs>
                <!-- Linie horizontal-->
                <line x1="50" y1="50" x2="1150" y2="50" 
                stroke-width="2" stroke="grey" id="li"/>
                <!-- Linie vertikal-->
                <line x1="100" y1="50" x2="100" y2="800" 
                stroke-width="2" stroke="grey" id="li2"/>
            </defs>
            <!-- Zeichne die oben definierte Linie 25 mal mit Abstand 30 -->
            <use xlink:href="#li" y="30"/>
            <use xlink:href="#li" y="60"/>
            <use xlink:href="#li" y="90"/>
            <use xlink:href="#li" y="120"/>
            <use xlink:href="#li" y="150"/>
            ...        
            <!-- Schreibe bestimmte Uhrzeit auf jede Linie -->
            <text x="55" y="100">00:00</text>
            <text x="55" y="130">01:00</text>
            <text x="55" y="160">02:00</text>
            <text x="55" y="190">03:00</text>
            ...            
            <!-- Zeichne vertikale Linie neben die Uhrzeiten -->
            <use xlink:href="#li2"/>
        </svg>]]>                       
                    </programlisting>
                </para>

            </sect2>
            <sect2>
                <title>XSLT zur Generierung der Event-Elemente</title>
                <para>Um die Event-Elemente eines Tages, einer Woche oder eines Monats in das
                    entsprechende Template einzutragen wird die XSL Transformation (XSLT), eine
                    Programmiersprache zu Transformation von XML Dokumenten, angewendet. Im ersten
                    Schritt wird der Datei, welche die Beispielevents enthält (sampleEvents.xml) ein
                    Stylesheet zugeordnet, das diese Events absteigend nach Datum und Startzeitpunkt
                    sortiert (sampleEvents.xsl). Das Ergebnis ist eine XML-Datei mit den sortierten
                    Event-Elementen (events_sortiert.xml). Aus dieser Zwischendatei heraus werden
                    dann die entsprechenden Stylesheets, entweder für die Tages-, die Wochen-, oder
                    die Monatssicht aufgerufen (tagessicht.xsl, wochensicht.xls,
                    monatssicht.xsl).</para>
                <para>Nachfolgender Programmcode zeigt beispielhaft, wie die Events aus der
                    sortierten Zwischendatei gefiltert und jeweils als Rechteck, dessen Höhe von der
                    Dauer des Events abhängt, in das oben beschriebene SVG-Template der Tagessicht
                    hineingezeichnet werden. <programlisting><![CDATA[<xsl:template match="/">
        <svg  height="200%" width="100%">
            <!-- Template "tagessicht" wird aufgerufen -->
            <xsl:call-template name="tagessicht"/>
            
            <!-- Globale Variablen -->
            <xsl:variable name="aktuellesDatum" as="xs:date"
                select="document('aktuellesDatum.xml')/datum"/>
                
            <!-- Schreibe das Datum des Tages in die obere Mitte 
            der Seite (festgelegt in aktuellesDatum.xml) -->
            <text x="600" y="25" text-anchor="middle" 
            font-size="20" fill="red">
                <xsl:value-of select="$aktuellesDatum"/>
            </text>
            
            <!-- Falls vorhanden, trage die Termine für den 
            Tag in das Template ein -->
            <xsl:for-each
                select="document('events_sortiert.xml')/events/
                event[datum = $aktuellesDatum]">
                <xsl:variable name="startRechteck" select="80 + 
                (startZeitInMin div 2)"/>
                <xsl:variable name="endeRechteck" select="80 + 
                (endZeitInMin div 2)"/>
                
                <!-- Zeichne ein Rechteck für die Zeitspanne, 
                in der ein Termin stattfindet -->
                <rect x="105" y="{$startRechteck}" width="1040"
                    height="{($endeRechteck)-$startRechteck}" 
                    fill="gainsboro"/>             
                <!-- Schreibe Startzeit, Endzeit und die 
                Beschreibung in das Rechteck -->
                <text x="115" y="{$startRechteck +15}">
                    <xsl:value-of select="startZeit"/> - 
                    <xsl:value-of select="endZeit"/> :
                        <xsl:value-of select="beschreibung"/>
                </text>
            </xsl:for-each>
        </svg>       
    </xsl:template>]]></programlisting>
                </para>
                <para> Das Ergebnis enthält nun das Datum des aktuellen Tages, das Template der
                    Tagessicht und die Rechtecke für die Events an dem betrachteten Tag. Folgendes
                    Bild zeigt die Tagessicht nach der XSL Transformation: <figure>
                        <title>Template Tagessicht</title>
                        <mediaobject>
                            <imageobject role="html">
                                <imagedata fileref="Images/tagessicht.png"/>
                            </imageobject>
                            <imageobject role="fo">
                                <imagedata scalefit="1" width="100%" contentdepth="100%"
                                    format="PDF" fileref="Images/tagessicht.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </para>
            </sect2>
            <sect2>
                <title>Wiederverwendung der Templates</title>
                <para>Bei der Erstellung der Templates wurde darauf geachtet, dass sie nicht nur für
                    eine Sicht verwendet werden können, sondern auch für die Erstellung der anderen Sichten brauchbar sind.</para>
                <para>Mit Hilfe des Befehls <![CDATA[<xsl:include href="tagessicht.xsl"/>]]> wird
                    das Stylesheet der Tagessicht, dessen Template in der Wochensicht benötigt wird,
                    in diese mit eingebunden. Genauso wird in der Monatssicht das Stylesheet der
                    Tagessicht eingebunden. Mit Hilfe des Befehls
                    <![CDATA[ <xsl:call-template name="tagessicht"/>]]> können einzelne Templates
                    aufgerufen werden. </para>
            </sect2>
            <sect2>
                <title>Uhrzeit</title>
                <para>Die Uhrzeit wird durch xs:time dargestellt. Die voreingestellte Darstellung
                    eines xs:time ist Stunden:Minuten:Sekunden (hh:mm:ss). Dank der
                    Formatierungsfunktion format-time() in XSLT 2.0 kann man xs:time Werte verwenden
                    und dann das Format dieser ändern. Somit können wir die Sekunden in den Sichten
                    weglassen und erhalten stattdessen die Darstellung Stunden:Minuten
                    (hh:mm).</para>
            </sect2>
            <sect2>
                <title>Einbindung der FuncX Bibliothek</title>
                <para>Für die Manipulation von Datums- und Zeitangaben wird die XSLT-Bibliothek FuncX 
                    (<link xlink:href="http://www.xsltfunctions.com/"></link>) verwendet. Die Bibliothek wird v.a. dazu benötigt, um die
                    Wochen und Monate mit den richtigen Daten zu füllen. Mit Hilfe ihrer Funktionen können so
                    beispielsweise der erste Tag im Monat, die Anzahl der Tage eines Monats, die Nummer eines Tages im Jahr, u.v.m. bestimmt 
                    werden. </para>
            </sect2>
        </sect1>
        <sect1>
            <title>Benutzeroberfläche</title>
            <para>Beschreibung der unterstützen Seiten, den darauf angebotenen
                Interaktionsmöglichkeiten und dem Layout, umgesetzt in XHTML, CSS und XForms</para>
        </sect1>
        <sect1>
            <title>Protokoll zwischen Client und Server</title>
            <para>HTTP-Nachrichten mit URLs und XML-Daten</para>
        </sect1>
        <sect1>
            <title>Server-Komponente</title>
            <para>Services, umgesetzt mit XQuery und XSLT</para>
            <sect2>
                <title> XProc </title>
            <para> An der Server-Seite werden die Kunden-Anfragen einen XProc-Prozess auslösen, bei
                    dem das angegebene Datum als Element im XML-Dokument
                    <![CDATA[aktuellesDatum.xml]]> gespeichert und mit Schema
                    <![CDATA[aktuellesDatum.xsd]]> validiert wird.</para>
            <para>Als nächstes, wird das XML-Dokument <![CDATA[sampleCalendarX.xml]]> durch Validate-XQuery-XSLT-Pipe transformiert . 
            Als Output erhalten wir entsprechenden Browser-Sicht.</para>
            <para>XProc erlaubt es, Workflow zu automatisieren und veranschaulichen. Darüber hinaus,
                    bei Benutzung von XProc wird die Architektur (welche Operationen wann passieren)
                    von den eigentlichen Code für diesen Operationen (wie sie ausgeführt werden)
                    getrennt: Separation of Concerns. Eine Integration von unterschiedlichen
                    Technologien (XQuery, XSLT, etc.)  innerhalb von XProc ist auch nicht zu
                    unterschätzen.</para>
            <para> Der Pipe-Prozess läuft folgendermaßen ab. Als erstes
                        wird <![CDATA[sampleCalendarX.xml]]> mit Schema
                        <![CDATA[CalendarX.xsd]]> validiert. Dann wird Kunden-Anfrage
                    getestet: ob Tages-, Wochen- oder Monats-Events gefragt wurde. Dies erfolgt via
                        <![CDATA[p:choose]]> step, wobei eine Verzweigung von drei Optionen
                    entsteht. Jede Option löst eine eigene Subpipe aus. Wenn die Option "Tag"
                    gewählt wurde, geht das validierte Dokument
                        <![CDATA[sampleCalendarX.xml]]> in die "Tag"-Subpipe als Input.
                    Dort erfolgt zunächst XQuery mit <![CDATA[getforDate.xquery]]> und
                    danach wird Kalendersicht im Browser mit <![CDATA[tagessicht.xsl]]>
                    erzeugt. Für die Option "Monat" erfolgt XQuery mit
                        <![CDATA[getforMonth.xquery]]> und danach die Transformation mit
                        <![CDATA[monatssicht.xsl]]>. Die "Woche"-Subpipe funktioniert genau
                    so mit<![CDATA[getforWeek.xquery]]> und <![CDATA[wochensicht.xsl]]>
                </para>
            <para>Output für alle drei Subprozesse wird der in Browser angezeigte Kalendersicht</para>
            </sect2>
        <sect2><title> XQuery </title>
            <para> Client hat die Möglichkeit, für ein von ihm auserwähltes Datum drei unterschiedliche Anfragen an DB zu stellen: 
            <itemizedlist>
                <listitem>
                    <para>Events für dieses Datum</para>
                </listitem>
                <listitem>
                    <para>Events für eine Woche, inklusive dieses Datum</para>
                </listitem>
                <listitem>
                    <para>Events für einen Kalendermonat, inklusive dieses Datum</para>
                </listitem>
            </itemizedlist></para>
                <para>Module:</para>
                <para>Um Durchblick und Wiederverwendung von den Hilfsfunktionen zu gewährleisten,
                    haben wir die Queries in die folgenden Module aufgeteilt: <itemizedlist>
                        <listitem>
                            <para><![CDATA[functX.xquery]]> - Module</para>
                            <para> Das ist eine Sammlung von den FunctX-funktionen, die andere
                                Hilfsfunktionen benutzen. Hauptsächlich sind diese Zeit-verbundenen
                                Funktionen, die in XSLT-Abschnitt bereits besprochen wurden. </para>
                        </listitem>
                        <listitem>
                            <para><![CDATA[isinPat.xquery]]> (Hilfsfunktionen)- Module</para>
                            <para>Eine Sammlung von den aneinanderabhängigen Funktionen.</para>
                        </listitem>
                    </itemizedlist></para>
            <para>
                    <table frame="all">
                        <title>Event XQueries Summary</title>
                        <tgroup cols="4">
                            <colspec colname="newCol1" colnum="1" colwidth="142px"/>
                            <colspec colname="c1" colnum="2" colwidth="160px"/>
                            <colspec colname="c2" colnum="3" colwidth="264px"/>
                            <colspec colname="c3" colnum="4" colwidth="297px"/>
                            <thead>
                                <row>
                                    <entry><emphasis role="italic">Events</emphasis></entry>
                                    <entry>Day Events</entry>
                                    <entry>Week Events</entry>
                                    <entry>Month Events</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><emphasis role="italic">Main <![CDATA[.xquery]]>
                                            file</emphasis></entry>
                                    <entry><![CDATA[getforDate.xquery]]></entry>
                                    <entry><![CDATA[getforWeek.xquery]]></entry>
                                    <entry><![CDATA[getforMonth.xquery]]></entry>
                                </row>
                                <row>
                                    <entry><emphasis role="italic">additional modules
                                            used</emphasis></entry>
                                    <entry>
                                        <itemizedlist>
                                            <listitem>
                                                <para><![CDATA[isinPat.xquery]]></para>
                                            </listitem>
                                            <listitem>
                                                <para><![CDATA[functX.xquery]]></para>
                                            </listitem>
                                        </itemizedlist>
                                    </entry>
                                    <entry>
                                        <itemizedlist>
                                            <listitem>
                                                <para><![CDATA[isinPat.xquery]]></para>
                                            </listitem>
                                            <listitem>
                                                <para><![CDATA[functX.xquery]]></para>
                                            </listitem>
                                        </itemizedlist>
                                    </entry>
                                    <entry>
                                        <itemizedlist>
                                            <listitem>
                                                <para><![CDATA[isinPat.xquery]]></para>
                                            </listitem>
                                            <listitem>
                                                <para><![CDATA[functX.xquery]]></para>
                                            </listitem>
                                        </itemizedlist>
                                    </entry>
                                </row>
                                <row>
                                    <entry><emphasis role="italic">specific declared auxiliary
                                            functions</emphasis></entry>
                                    <entry> none</entry>
                                    <entry>
                                        <itemizedlist>
                                            <listitem>
                                                <para><![CDATA[w:getEventsForWeek($d, $i)]]></para>
                                            </listitem>
                                            <listitem>
                                                <para><![CDATA[w:getEvents ($d as xs:date?, ]]></para>
                                                <para>
                                                  <![CDATA[$i as xs:integer)]]>
                                                </para>
                                            </listitem>
                                        </itemizedlist>
                                    </entry>
                                    <entry>
                                        <itemizedlist>
                                            <listitem>
                                                <para><![CDATA[m:getEventsForMonth ($d, $i, $j)]]></para>
                                            </listitem>
                                            <listitem>
                                                <para><![CDATA[m:getEvents ($d as xs:date?, ]]></para>
                                                <para>
                                                  <![CDATA[$i as xs:date, $j as xs:date)]]></para>
                                            </listitem>
                                        </itemizedlist>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>      
         <para><emphasis role="bold">Module<![CDATA[isinPat.xquery]]></emphasis></para>  
                <para>Am Ende, die Hilfsfunktion, die von den Day-, Week- und Month-XQueries benutzt wird is <![CDATA[local:forDay ($d)]]>
                                    Funktion. Sie erzeugt eine XML-Datei, die als Root-Element <![CDATA[<events>]]> hat,
                                    mit dem "date" Attribute, das das Datum zeigt. Darin enhalten sind <![CDATA[<event>]]>Elemente.
                                </para>
                <para><inlinemediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="70%" contentdepth="70%" fileref="Images/isinPat.png"/>
                        </imageobject>
                    </inlinemediaobject></para>

            
<para><emphasis role="bold">Eigentliche getrennte Queries für Tag, Woche und Monat</emphasis></para>
<para><programlisting><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<events date="2015-06-16">
   <event>
      <datum>2015-06-16</datum>
      <datumWochenTag>2</datumWochenTag>
      <datumJahresTag>167</datumJahresTag>
      <startZeit>12:15:00</startZeit>
      <startZeitInMin>735</startZeitInMin>
      <endZeit>13:45:00</endZeit>
      <endZeitInMin>825</endZeitInMin>
      <beschreibung>test 2nd event in day</beschreibung>
      <tagZuvor>2015-06-15</tagZuvor>
      <tagDanach>2015-06-17</tagDanach>
      <location>00.09.13A</location>
      <attendees>
         <attendee>Anne Brüggemann-Klein</attendee>
      </attendees>
   </event>
   <event>
 ...
   </event>
</events>]]>
<remark>Ergebnis von <![CDATA[getforDay.xquery]]></remark></programlisting></para>

          </sect2>
        </sect1>
    </chapter>
    <chapter>
        <title>Reflexion</title>
        <sect1>
            <title>Arbeit im Team</title>
            <para>Text</para>
        </sect1>
        <sect1>
            <title>Thematik CalendarX</title>
            <para>Text</para>
        </sect1>
        <sect1>
            <title>Organisation und Betreuung im Praktikum</title>
            <para>Text</para>
        </sect1>
    </chapter>
</book>
